# AGILE Notes

## Origins of Agile

### Software developers in the 80s and 90s experienced high levels of failed projects and noticed some common traits;
- Too much analysis upfront
- Restrictive change control
- Too much uncertainty

- Software developers collaborated and experimented with new ways of working
- They took the successful ideas and wrote down a set of underlying values and principles

### AGILE MANIFESTO
We are uncovering better ways of developing
software by doing it and helping others do it.
Through this work we have come to value:

Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration over contract negotiation
Responding to change over following a plan

### The Agile Principles

- Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.
- Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.
- Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.
- Business people and developers must work together daily throughout the project.
- Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.
- The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.
- Working software is the primary measure of progress.
- Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.
- Continuous attention to technical excellence and good design enhances agility.
- Simplicity--the art of maximising the amount of work not done--is essential.
- The best architectures, requirements, and designs emerge from self-organising teams.
- At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behaviour accordingly.

## Roles

### Product Owner
- Hey stakeholder who should have deep understanding of the product and communicates with both the team and other stakeholders
### Scrum Master
- Ensure the team keeps to the values of Scrum, facilitates meetings and removes impediments
### Scrum Team
- Effectively 3-9 people
- All doing whatever it takes to complete the agreed tasks
- Everyone is not just committed, they are involved

### Scrum Artifacts

- Product Backlog
- Contains all of the stories to be done to complete the entire project
- Sprint Backlog
- Increments

### Information Radiators

- Task board
- Burn Up chart
- Burn Down chart
- Definition of Done

### Sprint Retrospective

- 1-2 hours
- Discuss the process
- What went well?
- What did not go well?
- What could be improved?

### The Agenda

- Set the Stage
- Gather Data
- Generate Insights
- Decide What to Do
- Close the Retro
